export const validatorsMeta = [
  { name: 'email', comment: ['Creates a validator to ensure that the field value is a valid email address.', '', '- Validates against [standard email regex pattern](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email#basic_validation) used by browsers.', '- Skips validation when value is `null`.', '- Throws an error if the validation fails.', '- The default error message is: \'Invalid email address\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] },
  { name: 'nonEmpty', comment: ['Creates a validator to ensure that the field value is not empty.', '', '- Throws an error if the field value is:', '  - `null`', '  - an empty string', '  - an empty array', '  - an empty object', '- The default error message is: \'This field must have a value that is not empty\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] },
  { name: 'time', comment: ['Creates a validator to ensure that the field value is an integer between 0 and 86399000 (inclusive),', 'representing milliseconds in a day (00:00:00 to 23:59:59).', '', '- Skips validation when value is `null`.', '- Throws an error if the validation fails.', '- The default error message is: \'Invalid input\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] },
  { name: 'timestamp', comment: ['Creates a validator to ensure that the field value is a valid JavaScript timestamp.', '', '- Skips validation when value is `null`.', '- Throws an error if the validation fails.', '- The default error message is: \'Invalid timestamp\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] },
  { name: 'unique', comment: ['Creates a validator to ensure that the field (or subfield) value is unique within a collection (or subfields array).', '', '- Works with a single (sub)field, where this validator is applied, or multiple `fields`, which are passed as an array of (sub)field names.', '- Throws an error if the validation fails.', '- The default error message is: \'The value must be unique\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] },
  { name: 'uploadPath', comment: ['Creates a validator to ensure that the field value is a valid upload path.', 'The path must be an absolute path starting with a `/`.', 'The directory names can only contain lowercase letters, numbers, and hyphens.', 'The file name can contain lowercase letters, numbers, hyphens, and periods.', '', '- Skips validation when value is `null`.', '- Throws an error if the validation fails.', '- The default error message is: \'Invalid path\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.', '', 'Examples of valid upload paths:', '', '- `/image.webp`', '- `/my-dir/my-image.webp`', '- `/dir`', '', 'Examples of invalid upload paths:', '', '- `image.webp`', '- `/My-Image.webp`', '- `/my.dir/image.webp`', '- `/dir/`', '- `/`'] },
  { name: 'url', comment: ['Creates a validator to ensure that the field value is a valid URL.', '', '- Uses the native `URL` constructor for validation.', '- Skips validation when value is `null`.', '- Throws an error if the validation fails.', '- The default error message is: \'Invalid URL\'.', '- A custom `errorMessage` can be provided as a parameter.', '  - The `errorMessage` can be a string or a function that returns a string.', '  - The function receives an object with `_` and `__` properties to access the translation functions.'] }]
