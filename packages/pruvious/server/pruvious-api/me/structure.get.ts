import {
  applyFilters,
  assertUserPermissions,
  type Collections,
  collections,
  serializeTranslatableStringCallbacks,
} from '#pruvious/server'
import { pick } from '@pruvious/utils'
import { defaultMyAccountFields } from '../../hooks/filters/api/me/updatable-fields'

export default defineEventHandler(async (event) => {
  assertUserPermissions(event, ['update-account'])

  const { fields, fieldsLayout } = await applyFilters('api:me:updatable-fields', defaultMyAccountFields(), {})

  const structure = {
    fields: Object.fromEntries(
      Object.entries(collections.Users.fields)
        .filter(([fieldName]) => fields.includes(fieldName as keyof Collections['Users']['fields']))
        .map(([fieldName, field]) => [
          fieldName,
          {
            ...pick(field, [
              'nullable',
              'required',
              'immutable',
              'autoGenerated',
              'default',
              'conditionalLogic',
              'dependencies',
            ]),
            ...serializeTranslatableStringCallbacks(field.options),
          },
        ]),
    ),
    fieldsLayout,
  }

  return structure
})
